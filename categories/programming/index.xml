<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on Henry Post</title><link>/categories/programming/</link><description>Recent content in programming on Henry Post</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2021 &lt;a href="http://henrypost.net/">Henry Post&lt;/a></copyright><lastBuildDate>Thu, 08 Jul 2021 10:24:50 -0500</lastBuildDate><atom:link href="/categories/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Spring Framework Master Class</title><link>/posts/2021-07-08-spring-framework-master-class/</link><pubDate>Thu, 08 Jul 2021 10:24:50 -0500</pubDate><guid>/posts/2021-07-08-spring-framework-master-class/</guid><description>From https://udemy.com/course/spring-tutorial-for-beginners/.
Work for this can be found at https://github.com/HenryFBP/Spring-Framework-Master-Class
Work from the instructor can be found at https://github.com/in28minutes/spring-master-class/tree/master
Section 1. Intro to Spring What is Spring?
A: It&amp;rsquo;s a Dependency Injection Framework.
What is DI?
What is a dependency??
Dependency Below, the web layer depends on the business layer. The business layer depends on the data layer. Etc.
Typical code may have a service that is tightly coupled with some implementation of an algorithm, i.</description></item><item><title>Devops Project CI/CD With Jenkins, Ansible, Docker, K8s</title><link>/posts/2021-06-05-devops-project-cicd-with-jenkins-ansible-docker-k8s/</link><pubDate>Sat, 05 Jun 2021 13:52:36 -0500</pubDate><guid>/posts/2021-06-05-devops-project-cicd-with-jenkins-ansible-docker-k8s/</guid><description>The course The course is below.
https://udemy.com/course/valaxy-devops/
My work My work on this course can be found at the following links:
https://github.com/HenryFBP/valaxydevopsproject https://github.com/HenryFBP/valaxydevopsproject-hello-world-app Forked from respectively:
https://github.com/yankils/Simple-DevOps-Project https://github.com/yankils/hello-world Section 1: Introduction 1. Introduction We&amp;rsquo;ll use Git for SCM, Jenkins for CICD pipelines, Maven as build tool, Ansible for configuraton mgmt post-deployment, Docker to host aps, k8s to manage our docker containers.
We&amp;rsquo;ll use AWS to set all of this up.
DevOps Flow Devs usually push code to Git.</description></item><item><title>Docker Crash Course Notes</title><link>/posts/2021-05-12-docker-crash-course/</link><pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate><guid>/posts/2021-05-12-docker-crash-course/</guid><description>The course The course is below.
https://www.udemy.com/course/docker-tutorial-for-devops-run-docker-containers/
My work for this course can be found here:
https://github.com/HenryFBP/docker-crash-course https://github.com/henryfbp/dockerapp/ Slides are here.
Section 1: Get Started with Docker 1. Course Overview See course.
2. Support See course.
3. Support See course.
4. Slides See course.
5. Intro to virtualization Docker is only one implementation of containerization.
Before virtualization, the OS is installed on a physical machine, and apps run on the OS. Each machine only ran 1 app.</description></item><item><title>Hackthebox.eu "Vaccine" box Writeup</title><link>/posts/hackthebox.eu-vaccine-writeup/</link><pubDate>Sat, 08 May 2021 16:36:30 -0500</pubDate><guid>/posts/hackthebox.eu-vaccine-writeup/</guid><description>Just finished my third hackthebox.eu box, and made my first proper writeup.
All my disorganized notes on the beginner boxes can be found in each folder here, titled NOTES.md. Also see /boxes/.
And you can click here for the PDF writeup, or look below.</description></item><item><title>SQL Injection Video</title><link>/posts/2020-12-28-sql-injection-video/</link><pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate><guid>/posts/2020-12-28-sql-injection-video/</guid><description>A video I made about SQL Injection. Took about 5 hours total. I don&amp;rsquo;t do video editing or stuff like this frequently, but thought I&amp;rsquo;d post it here. Enjoy!
Resources:
https://www.youtube.com/watch?v=o7GODnWYYjE https://github.com/HenryFBP/sqlinjection-training-app/blob/master/video-script.md https://github.com/HenryFBP/sqlinjection-training-app I used:
OpenShot (It is genuinely painful to use for keyframes or splicing/positioning, please use DaVinci Resolve or kdenlive instead) Audacity GIMP Visual Studio Code I want to say thanks to the original repository creators, AppSecCo, for putting this source code on GitHub.</description></item><item><title>Docker for Node.js Projects From a Docker Captain</title><link>/posts/2020-12-28-docker-for-node.js-projects-from-a-docker-captain/</link><pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate><guid>/posts/2020-12-28-docker-for-node.js-projects-from-a-docker-captain/</guid><description>Preamble From https://www.udemy.com/course/docker-mastery-for-nodejs/.
Code/work in http://github.com/HenryFBP/Docker-for-Node.js-Projects-From-a-Docker-Captain.git.
Section 2: Docker Compose Basics sudo apt install docker docker-compose nodejs npm Links https://docs.docker.com/compose/ https://github.com/docker/toolbox/releases https://docs.docker.com/compose/compose-file/ https://github.com/BretFisher/ama/issues/8 https://docs.docker.com/compose/compose-file/compose-versioning/ https://github.com/docker/docker.github.io/pull/7593 Why compose? CLI is designed around dev workflows Not really designed for production docker-compose CLI talks to docker daemon and can be a substitute for the docker CLI itself docker-compose takes long-ass commands with 20+ flags and puts them into YAML files &amp;ldquo;Let&amp;rsquo;s not create more scripts, but make a tool that automates workflow in a declarative way&amp;rdquo; Use the docker-compose for dev&amp;rsquo;t but not for deployment, that should be done with docker command.</description></item><item><title>Certified Secure Software Lifecycle Professional (CSSLP) Notes</title><link>/posts/2020-06-15-csslp-notes/</link><pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate><guid>/posts/2020-06-15-csslp-notes/</guid><description>Preamble https://www.isc2.org/Certifications/CSSLP
This is a collection of notes I&amp;rsquo;ve taken for the CSSLP. Hopefully they are useful to you as well!
I made a program to study for this test. Feel free to use it.
https://github.com/HenryFBP/pyconsolequiz
Secure Software Concepts Core Concepts Main concept is about restricting user access Confidentiality Keep info away from people who don&amp;rsquo;t NEED to know it
Secret info remains secret
Must understand what data needs to be kept secret</description></item><item><title>Analyzing document-based malware and reverse engineering it</title><link>/posts/2020-04-27-analyzing-document-based-malware-and-reverse-engineering-it/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><guid>/posts/2020-04-27-analyzing-document-based-malware-and-reverse-engineering-it/</guid><description>The course The course this post is based off of is Expert Malware Analysis and Reverse Engineering by Abhinav Singh.
https://www.udemy.com/course/expert-malware-analysis-and-reverse-engineering/
My code All of my code I used to create these screenshots and data is below.
https://github.com/HenryFBP/VagrantPackerFiles/tree/master/vagrant/windows-analysis-and-vulnerable
The last commit that this content was modified on can be accessed below.
https://github.com/HenryFBP/VagrantPackerFiles/tree/d2175b7252f8d3e16e0a41e193a9c7da35942245/
Tools Windows VM
https://github.com/HenryFBP/VagrantPackerFiles/tree/master/vagrant/windows-analysis-and-vulnerable Documents
oledump oleid olemeta PDFs
pdf-parser pdfid pdfobjflow3 MS Office file formats OLE Compound file You can use oledump and oletools to view OLE files.</description></item><item><title>Exploiting Vulnserver!</title><link>/posts/2020-04-07-exploiting-vulnserver/</link><pubDate>Tue, 07 Apr 2020 13:30:00 +0000</pubDate><guid>/posts/2020-04-07-exploiting-vulnserver/</guid><description>My work/code View my work/code for this blog post at:
https://github.com/HenryFBP/VagrantPackerFiles/tree/e6b73090ed23bda867f36a7f23951da6a54b55b6
The course As part of on-the-job training, I got the chance to take a really nice course on UDemy called &amp;lsquo;Ethical Hacking &amp;amp; Bug Hunting: Buffer Overflow For Beginners&amp;rsquo; by Eslam Medhat.
https://www.udemy.com/course/buffer-overflow-course-exploit-development/
It uses Kali and Windows VMs that communicate with eachother in order to perform DLL injection that leads to a reverse shell being opened.
As someone who has never exploited this vulnerability before, this course gave me an intimate look into exactly how these attacks occur and how to craft one from scratch, provided you have the binary of the exploitable program.</description></item></channel></rss>